import { Button, useTheme } from '@mui/material';
import { FC, useCallback } from 'react';
import { NotificationDTO } from '../../tools/api.autogenerated';
import { myApi } from '../../tools/apiHandler';
import { NotificationMenuItem } from './NotificationMenuItem';

type FriendRequestReceivedMenuItemProps = {
  notif: NotificationDTO;
  onRead?: (id: number) => void;
};

const FriendRequestReceivedMenuItem: FC<FriendRequestReceivedMenuItemProps> = (
  props,
) => {
  const acceptFriendRequest = useCallback((username: string) => {
    myApi.usersControllerAcceptFriend({ username: username }, {
      toastError: true,
    } as any);
  }, []);

  const declineFriendRequest = useCallback((username: string) => {
    myApi.usersControllerDeclineFriend({ username: username }, {
      toastError: true,
    } as any);
  }, []);

  const theTheme = useTheme();

  return (
    <NotificationMenuItem
      date={props.notif.date}
      id={props.notif.id}
      title={'New friend request'}
      isRead={props.notif.isRead}
    >
      <div className="notif-body"
      style={{ backgroundColor: theTheme.palette.background.paper }}
      >
        <span className="notif-username">
          {props.notif.content.friend.username}
        </span>{' '}
        wants to add you as a friend !
        {!props.notif.isRead && (
          <div className="notif-buttons-container">
            <Button
              onClick={() => {
                if (props.onRead) props.onRead(props.notif.id);
                acceptFriendRequest(props.notif.content.friend.username);
              }}
            >
              Accept
            </Button>
            <Button
              onClick={() => {
                if (props.onRead) props.onRead(props.notif.id);
                declineFriendRequest(props.notif.content.friend.username);
              }}
            >
              Decline
            </Button>
          </div>
        )}
      </div>
    </NotificationMenuItem>
  );
};

export default FriendRequestReceivedMenuItem;
