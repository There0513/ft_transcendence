import { Button,   useTheme } from '@mui/material';
import { FC, useCallback } from 'react';
import { useNavigate } from 'react-router-dom';
import { NotificationDTO } from '../../tools/api.autogenerated';
import { isAxiosError, myApi } from '../../tools/apiHandler';
import { NotificationMenuItem } from './NotificationMenuItem';
import { toast } from 'react-toastify';
import { AxiosError } from 'axios';

type GameInvitationReceivedMenuItemProps = {
  notif: NotificationDTO;
  onRead?: (id: number) => void;
};


const GameInvitationReceivedMenuItem: FC<
GameInvitationReceivedMenuItemProps
> = (props) => {
  const navigate = useNavigate();
  const acceptInvitation = useCallback(async () => {
    try {
      const response = await myApi.matchmakingControllerAcceptInvitation(
        {
          lobbyId: (props.notif.content as any).lobby.id,
        },
        { toastError: true } as any,
        );
        navigate(`/app/game/${response.data.gameId}`);
      } catch (error: any) {
        if (isAxiosError(error)) {
        }
      }
  }, [props.notif.content]);
  
  const declineInvitation = useCallback(async () => {
    try {
      const response = await myApi.matchmakingControllerDeclineInvitation(
        {
          lobbyId: (props.notif.content as any).lobby.id,
        },
        { toastError: true } as any,
        );
      } catch (error: any) {
        if (isAxiosError(error)) {
        }
      }
    }, [props.notif.content]);
    
    return (
      <NotificationMenuItem
      date={props.notif.date}
      id={props.notif.id}
      title={'New game invitation'}
      isRead={props.notif.isRead}
      >
      <div className="notif-body" 
      >
        <span className="notif-username">
          {props.notif.content.friend.username}
        </span>{' '}
        wants to play with you !
        {!props.notif.isRead && (
          <div className="notif-buttons-container">
            <Button
              onClick={() => {
                if (props.onRead) props.onRead(props.notif.id);
                acceptInvitation();
              }}
            >
              Accept
            </Button>
            <Button
              onClick={() => {
                if (props.onRead) props.onRead(props.notif.id);
                declineInvitation();
              }}
            >
              Decline
            </Button>
          </div>
        )}
      </div>
    </NotificationMenuItem>
  );
};

export default GameInvitationReceivedMenuItem;
