import { Button, Menu, MenuItem } from '@mui/material';
import { FC, memo, useCallback, useEffect, useState } from 'react';
import { NotificationDTO } from '../../tools/api.autogenerated';
import './Notification.css';
import relativeTime from 'dayjs/plugin/relativeTime';
import { myApi } from '../../tools/apiHandler';
import FriendRequestReceivedMenuItem from './FriendRequestReceivedMenuItem';
import FriendRequestAcceptedMenuItem from './FriendRequestAcceptedMenuItem';
import GameInvitationReceivedMenuItem from './GameInvitationReceivedMenuItem';
import NewAchievementMenuItem from './NewAchievementMenuItem';

type NotificationMenuProps = {
  open: boolean;
  onClose: () => void;
  notifications: (NotificationDTO & { content: any })[];
  // anchorEl: HTMLButtonElement;
  onRead?: (notifId: number) => void;
};

const NotificationMenu: FC<NotificationMenuProps> = (props) => {
  return (
    <Menu
      id="long-menu"
      MenuListProps={{
        'aria-labelledby': 'long-button',
      }}
      // anchorEl={props.anchorEl}
      anchorPosition={{ top: 100, left: 10000 }}
      anchorReference={'anchorPosition'}
      open={props.open}
      onClose={props.onClose}
      PaperProps={
        {
          // style: {
          //   maxHeight: ITEM_HEIGHT * 4.5,
          // },
        }
      }
    >
      {props.notifications.length === 0 && (
        <MenuItem>You don't have any notifications yet</MenuItem>
      )}
      {props.notifications.map((notif) => {
        if (notif.type === 'friend_request_received')
          return (
            <FriendRequestReceivedMenuItem
              notif={notif}
              onRead={props.onRead}
              key={notif.id}
            />
          );
        else if (notif.type === 'friend_request_accepted')
          return <FriendRequestAcceptedMenuItem notif={notif} key={notif.id} />;
        else if (notif.type === 'game_invitation_received')
          return (
            <GameInvitationReceivedMenuItem
              notif={notif}
              key={notif.id}
              onRead={props.onRead}
            />
          );
        else if (notif.type === 'new_achievement')
          return (
            <NewAchievementMenuItem
              notif={notif}
              key={notif.id}
              onRead={props.onRead}
            />
          );
      })}
    </Menu>
  );
};

export default NotificationMenu;
