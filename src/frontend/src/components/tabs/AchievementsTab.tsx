import * as React from 'react';
import { styled } from '@mui/material/styles';
import Box from '@mui/material/Box';
import ListItem from '@mui/material/ListItem';
import ListItemText from '@mui/material/ListItemText';
import FormGroup from '@mui/material/FormGroup';
import FormControlLabel from '@mui/material/FormControlLabel';
import Checkbox from '@mui/material/Checkbox';
import Grid from '@mui/material/Grid';
import Typography from '@mui/material/Typography';
import { useContext } from 'react';
import { CircularProgress, Fab } from '@mui/material';
import { profileContext } from '../ProfilePage';
import EmojiEventsIcon from '@mui/icons-material/EmojiEvents';
import MilitaryTechIcon from '@mui/icons-material/MilitaryTech';
import CheckIcon from '@mui/icons-material/Check';
import PlayCircleOutlineIcon from '@mui/icons-material/PlayCircleOutline';
import GradeIcon from '@mui/icons-material/Grade';
import { UserGetProfileResponseDTO } from '../../tools/api.autogenerated';

const Demo = styled('div')(({ theme }) => ({
  backgroundColor: theme.palette.background.paper,
}));

export default function AchievementsTab(props: {
  person?: UserGetProfileResponseDTO;
}) {
  const [secondary, setSecondary] = React.useState(false);
  const { isLoading, profile } = useContext(profileContext);

  const user = props.person ? props.person : profile;

  if (!user) return <></>;
  return (
    <Box sx={{ flexGrow: 1, maxWidth: 752 }}>
      <FormGroup row>
        <FormControlLabel
          control={
            <Checkbox
              checked={secondary}
              onChange={(event) => setSecondary(event.target.checked)}
            />
          }
          label="show achievement description"
        />
      </FormGroup>
      <Grid container spacing={2}>
        <Grid item xs={12} md={9}>
          <Typography
            sx={{ mt: 4, mb: 2 }}
            variant="h6"
            component="div"
            fontWeight={300}
          >
            {user?.firstName ? (
              <p>{user?.username}'s achievements :</p>
            ) : (
              <p>Achievements</p>
            )}
          </Typography>
          <Demo>
            {(user?.achievements as any).achievement1 && (
              <ListItem>
                <Fab variant="extended" color="primary" sx={{ mr: 1 }}>
                  {/* <PlayCircleOutlineIcon /> */}
                  <CheckIcon />
                </Fab>
                <ListItemText
                  primary="Welcome, Learner!"
                  secondary={
                    secondary
                      ? 'You won your first game - keep going on!'
                      : null
                  }
                />
              </ListItem>
            )}
            {(user?.achievements as any).achievement2 && (
              <ListItem>
                <Fab variant="extended" color="primary" sx={{ mr: 1 }}>
                  <GradeIcon />
                </Fab>
                <ListItemText
                  primary="Not bad at all!"
                  secondary={
                    secondary ? 'You won five games - congrats!' : null
                  }
                />
              </ListItem>
            )}
            {(user?.achievements as any).achievement3 && (
              <ListItem>
                <Fab variant="extended" color="primary" sx={{ mr: 1 }}>
                  <EmojiEventsIcon />
                </Fab>
                <ListItemText
                  primary="Expert"
                  secondary={secondary ? 'You won ten games!' : null}
                />
              </ListItem>
            )}
            {(user?.achievements as any).achievement4 && (
              <ListItem>
                <Fab variant="extended" color="primary" sx={{ mr: 1 }}>
                  <MilitaryTechIcon />
                </Fab>
                <ListItemText
                  primary="Champion"
                  secondary={
                    secondary
                      ? 'First place in global rank - YOU ARE THE CHAMPION!'
                      : null
                  }
                />
              </ListItem>
            )}
          </Demo>
        </Grid>
      </Grid>
    </Box>
  );
}
