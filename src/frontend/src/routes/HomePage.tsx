import React, { useEffect, createContext } from 'react';
import { useNavigate, Link } from 'react-router-dom';
import { useAuth } from '../tools/auth';
import { useQuery } from 'react-query';
import { myApi } from '../tools/apiHandler';
import Dashboard from '../components/Dashboard';
import { FriendData, GetHomeDataResponseDTO } from '../tools/api.autogenerated';

export type DashboardContextType = {
  data:
    | (GetHomeDataResponseDTO & {
        merged: (FriendData & { status: ('friend' | 'online' | 'inGame')[] })[];
      })
    | null;
};

const DashboardContextDefault: DashboardContextType = { data: null };

export const DashboardContext = createContext<DashboardContextType>(
  DashboardContextDefault,
);

const HomePage = () => {
  const { signOut } = useAuth();
  const navigate = useNavigate();
  const { isLoading, error, data } = useQuery('homedata', () =>
    myApi.appControllerGetHomeData(),
  );

  if (isLoading) return <div>Loading</div>;

  if (error) return <div>error</div>;

  return (
    <div>
      <DashboardContext.Provider
        value={
          {
            data: data !== undefined ? data.data : null,
          } as DashboardContextType
        }
      >
        <Dashboard />
      </DashboardContext.Provider>
    </div>
  );
};

export default HomePage;
